@model PaginadorModel

<div class="row">
    <div class="panel-heading">
        <div class="col-sm-12">
          
          @using (Html.BeginForm("GetExcelLibroMayorTwo", "Contabilidad", FormMethod.Post))
          {
                <div class="pull-right">
                    <br />
                    <button class="btn btn-success waves-effect waves-light pull-right" value="Exportar" name="Save" type="submit" data-animation="fadein" data-plugin="custommodal" data-overlaySpeed="200" data-overlayColor="#36404a">
                        <span class="btn-label"><i class="fa fa-file-excel-o"></i></span>Exportar
                    </button>
                    <br />
                </div>
                <br />
            }

            <h2 class="page-header">Libro Mayor</h2>
            <ol class="breadcrumb">
                <li>
                    <a href="#">Contabilidad Reportes</a>
                </li>
                <li>
                    <a href="#">-</a>
                </li>
                <li class="active">
                    Informe Contabilidad
                </li>
            </ol>
        </div>
    </div>
</div>
<br />

@using (Html.BeginForm("LibroMayorTwo", "Contabilidad", FormMethod.Post))
{
<div class="panel-heading">
    @if (ViewBag.AnioSinFiltro != null)
    {
        <div class="alert alert-success">
            @ViewBag.AnioSinFiltro
        </div>
    }
    <div class="row form-group">

        <div class="col-md-2">
            <label>Cantidad de Registros</label>
            <select class="form-control" id="cantidadRegistrosPorPagina" name="cantidadRegistrosPorPagina">
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="0">Todos</option>
            </select>
        </div>

        <div class="col-md-2">
            <label>Año</label>
            <input type="number" name="Anio" id="Anio" value="" class="form-control" />
        </div>
        <div class="col-md-2">
            <label>Mes</label>
            <select id="Mes" name="Mes" class="form-control">
                <option value="0">Todos</option>
                <option value="1">Enero</option>
                <option value="2">Febrero</option>
                <option value="3">Marzo</option>
                <option value="4">Abril</option>
                <option value="5">Mayo</option>
                <option value="6">Junio</option>
                <option value="7">Julio</option>
                <option value="8">Agosto</option>
                <option value="9">Septiembre</option>
                <option value="10">Octubre</option>
                <option value="11">Noviembre</option>
                <option value="12">Diciembre</option>
            </select>
        </div>
        <div class="col-md-2">
            <label class="control-label">Cuenta Contable</label>
            <select id="CuentaContableID" name="CuentaContableID" class="selectpicker show-tick form-control" data-live-search="true" data-size="10">
                @Html.Raw(ViewBag.HtmlStr)
            </select>
        </div>
        <div class="col-md-2 Unidos">
            <label>Fecha Inicio</label>
            <input type="text" name="FechaInicio" id="FechaInicio" value="" class="form-control date" autocomplete="off" />
        </div>
        <div class="col-md-2 Unidos">
            <label>Fecha Fin</label>
            <input type="text" name="FechaFin" id="FechaFin" value="" class="form-control date" autocomplete="off" />
        </div>
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-2">
                    <label>Glosa</label>
                    <input class="form-control" type="text" name="Glosa" id="Glosa" value="" />
                </div>
                <div class="col-md-2 ">
                    <label>Rut</label>
                    <input class="form-control" type="text" name="Rut" id="Rut" value="" maxlength="10" />
                </div>
                <div class="col-md-2 Unidos">
                    <label>Tipo Prestador</label>
                    <select class="form-control" id="TipoPrestador" name="TipoPrestador" onchange="AuxPrestadorSeleccionado()">
                        <option value="">Selecciona</option>
                        <option value="CL">Cliente</option>
                        <option value="PR">Proveedor</option>
                        <option value="P">Persona</option>
                    </select>
                </div>
                <div class="col-md-2 Unidos">
                    <label>Razon Social Prestador</label>
                    <select class="form-control" id="RazonPrestador" name="RazonPrestador"></select>
                </div>
                <div class="col-md-2">
                    <label>Num Voucher</label>
                    <input type="Number" class="form-control" name="NumVoucher" id="NumVoucher" value="" />
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-success centrar" id="Guardar" name="Guardar">Buscar</button>
                </div>
            </div>
        </div>
    </div>
</div>

}


<div class="card-box">
    <div class="panel-body" id="parshial">

        @{ string[] rowThingie1 = ParseExtensions.obtieneUnicosEnLista(Model.ResultStringArray);
            if (Model.ResultStringArray.Count() == 0 || Model.ResultStringArray.Count() == 1)
            {
                <div class="alert alert-danger" role="alert">
                    No se encontraron registros.
                </div>
            }

            if (Model.ResultStringArray.Count() > 0)
            {
                for (int i = 0; i < rowThingie1.Length; i++)
                {
                    <h4>@rowThingie1[i]</h4>
                    <table class="table table-responsive table-striped table-bordered table-hover" id="dataTables-example">
                        <thead>
                            <tr>
                                <th class="FontSize text-center">#</th>
                                <th class="FontSize text-center">FECHA CONTABILIZACIÓN</th>
                                <th class="FontSize text-center">COMPROBANTE</th>
                                <th class="FontSize text-center">GLOSA</th>
                                <th class="FontSize text-center">RAZON SOCIAL</th>
                                <th class="FontSize text-center">RUT</th>
                                <th class="FontSize text-center">DEBE</th>
                                <th class="FontSize text-center">HABER</th>
                                <th class="FontSize text-center">SALDO</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{int totalHaber = 0;}
                            @{int totalDebe = 0;}

                            @foreach (string[] ListaLibMayor in Model.ResultStringArray)
                    {
                        if (ListaLibMayor[9] == rowThingie1[i])
                        {
                            string classAlign = "text-right";

                                    <tr class="odd gradeX">
                                        @for (int k = 0; k < ListaLibMayor.Length - 3; k++)
                                        {
                                            if (k == 1)
                                            {
                                                classAlign = "text-left nowrappls";
                                            }

                                            if (k == 6 || k == 7 || k == 8)
                                            {
                                                classAlign = "text-left nowrappls monto"; //con el fin de hacer el separador de miles con javascript
                                            }

                                            if (k == 6)
                                            {
                                                if (ListaLibMayor[k] != "-")
                                                {
                                                    totalDebe = totalDebe + ParseExtensions.ParseInt(ListaLibMayor[k].Replace(".", ""));//Int32.Parse(ListaLibMayor[k].Replace(".", ""));
                                                }
                                            }

                                            if (k == 7)
                                            {
                                                if (ListaLibMayor[k] != "-")
                                                {
                                                    totalHaber = totalHaber + ParseExtensions.ParseInt(ListaLibMayor[k].Replace(".", ""));//.Replace(".", ""));
                                                }
                                            }
                                            if (k == 2)
                                            {
                                                <td><a href="@Url.Action("IngresoVoucher", "Contabilidad", new { IDVoucher = ListaLibMayor[11] })" class="label label-table label-primary" target="_blank">@ListaLibMayor[k]</a></td>
                                            }
                                            else
                                            {
                                                <td class="@classAlign">@ListaLibMayor[k]</td>
                                            }
                                        }
                                    </tr>
                                }
                            }
                            <tr>
                                <th class="FontSize text-center" colspan="5"></th>
                                <th class="FontSize text-right">TOTAL</th>
                                <th class="FontSize text-right">@ParseExtensions.NumberWithDots_para_BalanceGeneral(totalDebe)</th>
                                <th class="FontSize text-right">@ParseExtensions.NumberWithDots_para_BalanceGeneral(totalHaber)</th>
                                @{int total = totalHaber - totalDebe;}
                                <th class="FontSize text-right">@ParseExtensions.NumberWithDots_para_BalanceGeneral(Math.Abs(total))</th>

                            </tr>
                        </tbody>

                    </table>
                                        }
                                    }

                @:  </div>

                          
                                @:<table class="table table-responsive table-bordered table-hover" id="dataTables-example">
                                    <thead>
                                        <tr>
                                            <th class="FontSize text-center" colspan="5">-</th>
                                            <th class="FontSize text-center">TOTAL</th>
                                            <th class="FontSize text-center">DEBE</th>
                                            <th class="FontSize text-center">HABER</th>
                                            <th class="FontSize text-center">SALDO</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (string[] Totales in Model.ResultStringArray)
                                        {
                                            <tr>
                                                @for (int i = 0; i < Totales.Length; i++)
                                                {

                                                    if (Totales[5] == "Total Final:")
                                                    {

                                                        <th class="FontSize text-center">@Totales[i]</th>

                                                    }
                                                }
                                            </tr>
                                        }
                                    </tbody>

                               @:</table>

                          
                           @: </div>
                                    //Paginador
                                    Html.RenderPartial("_paginador", Model);

        }

</>

<style>
    #parshial {
        background-color: #fff;
    }

    .panel-heading {
        background-color: #fff;
    }
    .centrar{
        margin-top:25px;
    }
    /*.Unidos{
        color:white;
        background-color:lightgreen;
        border-radius:5px;
        padding-bottom:10px;
    }*/

</style>

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>



<script type="text/javascript">
    $(document).ready(function () {

        $('#CuentaContableID').select2();
    
        ObtenerInputs();
        GuardarSeleccionado();
        ObtenerSeleccionado();
        CondicionesParaLimpiar();
    });

    function AuxPrestadorSeleccionado() {

        var Url = "@Url.Action("ObtenerPrestadorRazonSocial", "Contabilidad")";
        var Prestador = $('#TipoPrestador option:selected').val();

        $.getJSON(Url, { TipoPrestador: Prestador }, function (data) {
            if (data.ok == true) {

                $('#RazonPrestador').html(data.selectInput);
            }
        });
    }

    function CondicionesParaLimpiar() {
        //Eliminamos la memoria de los Storage solo si se recarga la página sin realizar ninguna busqueda.
        var Click = false;
        $('#Guardar').on("click", function () {
            Click = true;
        });
        $('#Paginador li').on("click", function () {
            Click = true;
        });
        $(window).on("beforeunload", function () {
            if (Click == false) {
                localStorage.removeItem("MesAguardar");
                localStorage.removeItem("CantidadDeRegistros");
                //localStorage.removeItem("CuentaContable");
                localStorage.removeItem("GlosaAGuardar");
                localStorage.removeItem("AnioAGuardar");
                localStorage.removeItem("FechaInicioAGuardar");
                localStorage.removeItem("FechaFinAGuardar");
                localStorage.removeItem("RutAGuardar");
                localStorage.removeItem("RazonPrestador");
            }
        });
    }


    function GuardarSeleccionado() {
        var MesSeleccionado = $("#Mes option:selected").text();
        $('#Mes').on('change', function () {
            MesSeleccionado = $("#Mes option:selected").text();
            $('#Guardar').on('click', function () {
                localStorage.setItem("MesAguardar", MesSeleccionado);
            });
        });

        var CantRegistrosSelect = $('#cantidadRegistrosPorPagina option:selected').text();
        $('#cantidadRegistrosPorPagina').on('change', function () {
            CantRegistrosSelect = $('#cantidadRegistrosPorPagina option:selected').text();
            $('#Guardar').on('click', function () {
                localStorage.setItem("CantidadDeRegistros", CantRegistrosSelect);
            });
        });

        //var CuentaContSelect = $('#CuentaContableID option:selected').text();
        //$('#CuentaContableID').on('change', function () {
        //    CuentaContSelect = $('#CuentaContableID option:selected').text();
        //    $('#Guardar').on('click', function () {
        //        localStorage.setItem("CuentaContable", CuentaContSelect);
        //    });
        //});

        var TipoPrestadorSelect = $('#TipoPrestador option:selected').text();
        $('#TipoPrestador').on('change', function () {
            var TipoPrestadorSelect = $('#TipoPrestador option:selected').text();
            $('#Guardar').on('click', function () {
                localStorage.setItem("PrestadorTipo", TipoPrestadorSelect);
            });
        });

        var PrestadorSelect = $('#RazonPrestador option:selected').text();
        $('#RazonPrestador').on('change', function () {
            var PrestadorSelect = $('#RazonPrestador option:selected').text();
            $('#Guardar').on('click', function () {
                localStorage.setItem("RazonSocial", PrestadorSelect);
            });
        });
    }

    function ObtenerSeleccionado() {
        $('#Mes option').each(function () {
            let valorSeleccionado = $(this).text();
            var ObtenerMesSeleccionado = localStorage.getItem("MesAguardar");

            if (ObtenerMesSeleccionado == valorSeleccionado) {
                let AñadirAtributo = $(this).attr("selected", "selected");
            }
        });

        $('#cantidadRegistrosPorPagina option').each(function () {
            let valorSeleccionado = $(this).text();
            var ObtenerCantidadRegistros = localStorage.getItem("CantidadDeRegistros");

            if (ObtenerCantidadRegistros == valorSeleccionado) {
                let AñadirAtributo = $(this).attr("selected", "selected");
            }
        });

        //$('#CuentaContableID option').each(function () {
        //    let valorSeleccionado = $(this).text();
        //    var ObtenerCuentaContable = localStorage.getItem("CuentaContable");

        //    if (ObtenerCuentaContable == valorSeleccionado) {
        //        let AñadirAtributo = $(this).attr("selected", "selected");
        //    }
        //});

        $('#TipoPrestador option').each(function () {
            let valorSeleccionado = $(this).text();
            var ObtenerTipoPrestador = localStorage.getItem("PrestadorTipo");

            if (ObtenerTipoPrestador == valorSeleccionado) {
                let AñadirAtributo = $(this).attr("selected", "selected");
            }
        });

        $('#RazonPrestador option').each(function () {
            let valorSeleccionado = $(this).text();
            var ObtenerRazonSocial = localStorage.getItem("RazonSocial");

            if (ObtenerRazonSocial == valorSeleccionado) {
                let AñadirAtributo = $(this).attr("selected", "selected");
            }
        });
    }

    function ObtenerInputs() {

        var Glosa = document.getElementById("Glosa");
        var Anio = document.getElementById("Anio");
        var FechaInicio = document.getElementById("FechaInicio");
        var FechaFin = document.getElementById("FechaFin");
        var Rut = document.getElementById("Rut");

        $('#Guardar').on('click', function () {
            localStorage.setItem("AnioAGuardar", Anio.value);
            localStorage.setItem("GlosaAGuardar", Glosa.value);
            localStorage.setItem("FechaInicioAGuardar", FechaInicio.value);
            localStorage.setItem("FechaFinAGuardar", FechaFin.value);
            localStorage.setItem("RutAGuardar", Rut.value);
        });

        var ObtenerAnio = localStorage.getItem("AnioAGuardar");
        var ObtenerGlosa = localStorage.getItem("GlosaAGuardar");
        var ObtenerFechaInicio = localStorage.getItem("FechaInicioAGuardar");
        var ObtenerFechaFin = localStorage.getItem("FechaFinAGuardar");
        var ObtenerRut = localStorage.getItem("RutAGuardar");

        if (ObtenerAnio != null) {
            Anio.value = ObtenerAnio;
        }
        if (ObtenerGlosa != null) {
            Glosa.value = ObtenerGlosa;
        }
        if (ObtenerRut != null) {
            Rut.value = ObtenerRut;
        }
        if (ObtenerFechaInicio != null && ObtenerFechaFin != null) {
            FechaInicio.value = ObtenerFechaInicio;
            FechaFin.value = ObtenerFechaFin;
        }
    }
</script>


